{"componentChunkName":"component---src-templates-post-js","path":"/36c8d4f0-7394-5bff-b6b5-bae80a8113aa","result":{"data":{"markdownRemark":{"html":"<h3>デモ</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ViewController</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">UIViewController</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">loadView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        view <span class=\"token operator\">=</span> <span class=\"token function\">UILabel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>apply <span class=\"token punctuation\">{</span> $<span class=\"token number\">0</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Apply Swift\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">textAlignment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">textColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">font</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token function\">boldSystemFont</span><span class=\"token punctuation\">(</span>ofSize<span class=\"token punctuation\">:</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">backgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span>black<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<img width=\"375\" alt=\"Simulator Screen Shot - iPhone 8 - 2019-10-10 at 22.43.54.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/166241/31904bd4-9ad3-746f-ddb2-e3839afc82fa.png\">\n<hr>\n<p>私以外にもKotolinのapplyをSwiftでもやりたいと思ったことのある人はいるでしょう。\n例えば以下のようにUILabelを定義する場面を考えます。</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> label<span class=\"token punctuation\">:</span> <span class=\"token builtin\">UILabel</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">let</span> it <span class=\"token operator\">=</span> <span class=\"token function\">UILabel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   it<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">\"label..\"</span> \n   <span class=\"token keyword\">return</span> it\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>以前までは、以下のようなプロトコルを定義することで</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">protocol</span> <span class=\"token builtin\">Applicatable</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">extension</span> <span class=\"token builtin\">Applicatable</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token number\">_</span> closure<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">Self</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">closure</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">self</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">extension</span> <span class=\"token builtin\">NSObject</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Applicatable</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>それっぽく実装することができました。</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> label <span class=\"token operator\">=</span> <span class=\"token function\">UILabel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>apply <span class=\"token punctuation\">{</span> it <span class=\"token keyword\">in</span>\n   it<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">\"label..\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>しかし言語の進化により、もっとKotolinのapplyに近づけることができるようになりました。\nつい先日<a href=\"https://github.com/marty-suzuki/DuctTape\">DuctTape</a>というライブラリが公開されたのをきっかけにそれが可能になってたことを知りました。（Swiftのキャッチアップに遅れぎみです）</p>\n<h3>dynamicMemberLookup</h3>\n<p>Swift４.2で追加された機能ですが</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">@dynamicMemberLookup\n<span class=\"token keyword\">struct</span> <span class=\"token builtin\">StringMaker</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">subscript</span><span class=\"token punctuation\">(</span>dynamicMember value<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">String</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> value\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> maker <span class=\"token operator\">=</span> <span class=\"token function\">StringMaker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">debugPrint</span><span class=\"token punctuation\">(</span>maker<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token comment\">// String: id</span>\n<span class=\"token function\">debugPrint</span><span class=\"token punctuation\">(</span>maker<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token comment\">// String: name</span></code></pre></div>\n<p>Swift5.1からKeyPathを使えるようになったみたいです。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">@dynamicMemberLookup attribute requires ‘xxx’ to have a ‘subscript(dynamicMember:)’ method that accepts either ‘ExpressibleByStringLiteral’ or a keypath</code></pre></div>\n<p>これを使って参考ライブラリをパクりつつインターフェースの変更を40行程度実装すると</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">      <span class=\"token keyword\">let</span> label <span class=\"token operator\">=</span> <span class=\"token function\">UILabel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>apply <span class=\"token punctuation\">{</span> $<span class=\"token number\">0</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Apply Swift\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">textAlignment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">textColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">backgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span>black<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">debugPrint</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Optional(Apply Swift)</span></code></pre></div>\n<p>上記のような実装をすることができました。\n一応ソースはGistに公開しておきます。</p>\n<p><a href=\"https://gist.github.com/churabou/7243d4ac9121a56513bb16023e3698f7\">https://gist.github.com/churabou/7243d4ac9121a56513bb16023e3698f7</a></p>","frontmatter":{"title":"Swift5.1 dynamicMemberLookup^KeyPathを使ってSwiftにKotolinのapplyを実装する","tags":["Xcode","iOS","Kotlin","Swift"],"date":"2019年10月04日"}},"sameTagPosts":{"edges":[{"node":{"id":"8845f661-5548-599d-8a4e-6a5320066ede","frontmatter":{"title":"SwiftUIでTextViewを使う","tags":["iOS","Swift","SwiftUI"],"date":"2019年10月27日"}}},{"node":{"id":"c57e83f6-2e10-5f63-abfb-b78c3814e7c3","frontmatter":{"title":"SwiftUIとXcodeのPreviewでオートレイアウトをリアルタイムで確認しながら実装できて感動した","tags":["Xcode","iOS","AutoLayout","Swift","SwiftUI"],"date":"2019年10月16日"}}},{"node":{"id":"6aa8f8fc-5836-52a8-bd46-ae56d1d4f4de","frontmatter":{"title":"SwiftでTooltipを描画する","tags":["iOS","UIKit","Swift"],"date":"2019年08月31日"}}},{"node":{"id":"fa82a31d-4690-5cb8-a507-42237d6afec2","frontmatter":{"title":"実機１台で別端末のレイアウトを確認する方法","tags":["Xcode","iOS","Swift"],"date":"2019年08月15日"}}},{"node":{"id":"4ac87f61-abdb-5629-97f6-79d92e985fce","frontmatter":{"title":"Swiftで簡単なGrid Layoutを実装するためのレイアウトクラス （UIKit）","tags":["iOS","Swift"],"date":"2019年07月06日"}}}]}},"pageContext":{"id":"36c8d4f0-7394-5bff-b6b5-bae80a8113aa","tags":["Xcode","iOS","Kotlin","Swift"]}}}