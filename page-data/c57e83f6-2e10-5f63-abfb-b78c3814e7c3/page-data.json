{"componentChunkName":"component---src-templates-post-js","path":"/c57e83f6-2e10-5f63-abfb-b78c3814e7c3","result":{"data":{"markdownRemark":{"id":"c57e83f6-2e10-5f63-abfb-b78c3814e7c3","html":"<p>先週くらいにXcode11に上げてようやく触り始めたのですが、感動してしまったので動画に撮りました。</p>\n<p><img src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/166241/95f50b09-6e2c-2346-9cd3-db6930ea93be.gif\" alt=\"preview.gif\"></p>\n<p>なんかUIViewRepresentableを使えば、SwiftUIでUIKitのViewを使えますよね</p>\n<div class=\"gatsby-highlight\" data-language=\".swift\"><pre class=\"language-.swift\"><code class=\"language-.swift\">struct AutoLayout: UIViewRepresentable {\n    func updateUIView(_ view: AutoLayoutView, context: UIViewRepresentableContext&lt;AutoLayout&gt;) {}\n    \n    func makeUIView(context: UIViewRepresentableContext&lt;AutoLayout&gt;) -&gt; AutoLayoutView {\n        AutoLayoutView()\n    }\n}</code></pre></div>\n<p>もちろんPreviewにも表示されるわけです。</p>\n<div class=\"gatsby-highlight\" data-language=\".swift\"><pre class=\"language-.swift\"><code class=\"language-.swift\">struct AutoLayout_Previews: PreviewProvider {\n    static var previews: some View {\n        AutoLayout()\n            .previewLayout(.fixed(width: 414, height: 300))\n    }\n}</code></pre></div>\n<p>Twitterを見ているとベータ版を触られてる人たちがコードレイアウトで書いても良さそうとか言ってたので、\nオートレイアウトを試してみようといじってました。\nでAutoLayoutViewの内部でコードでオートレイアウトを指定してあげたんですが、なんかpreviewに即反映されたんですよ。</p>\n<div class=\"gatsby-highlight\" data-language=\".swift\"><pre class=\"language-.swift\"><code class=\"language-.swift\">final class AutoLayoutView: UIView {\n    required init?(coder: NSCoder) {\n        fatalError(&quot;init(coder:) has not been implemented&quot;)\n    }\n\n    private let label = UILabel()\n\n    override init(frame: CGRect) {\n        super.init(frame: frame)\n        initializeConstraints()\n    }\n\n    func initializeConstraints() {\n        // label.leftAnchor....\n    }\n}</code></pre></div>\n<p>もしやと思いオートレイアウトをコードで書く用の自作Extensionを追加していじってみると、これも反映されました。\nそれが冒頭のgifです。</p>\n<hr>\n<p>勤務先の企業でSwiftUIをメインのアプリで使えるようになるには後２年程かかるのでまだまだオートレイアウトを使わなければいけないのですが、このPreview機能の恩恵は大きそうです。</p>\n<hr>\n<p>ソースはこんな感じです。\nメソッドチェーンの ExtensionはNSLayoutAnchorをラップしているだけです。</p>\n<div class=\"gatsby-highlight\" data-language=\".swift\"><pre class=\"language-.swift\"><code class=\"language-.swift\">final class AutoLayoutView: UIView {\n    required init?(coder: NSCoder) {\n        fatalError(&quot;init(coder:) has not been implemented&quot;)\n    }\n\n    override init(frame: CGRect) {\n        super.init(frame: frame)\n        initializeView()\n        initializeConstraints()\n    }\n    \n    private let iconImageView = UIImageView()\n    private let nameLabel = UILabel()\n\n    func initializeView() {\n        nameLabel.text = &quot;abouch&quot;\n        nameLabel.backgroundColor = .green\n        addSubview(nameLabel)\n\n        iconImageView.backgroundColor = .red\n        iconImageView.layer.cornerRadius = 20\n        addSubview(iconImageView)\n    }\n    \n    func initializeConstraints() {\n        iconImageView.chura.layout\n            .size(100)\n            .left(24)\n            .centerY(self)\n        \n        nameLabel.chura.layout\n            .left(iconImageView.rightAnchor + 24)\n            .top(iconImageView.topAnchor + 16)\n            .right(-24)\n            .height(60)\n    }\n}</code></pre></div>","frontmatter":{"title":"SwiftUIとXcodeのPreviewでオートレイアウトをリアルタイムで確認しながら実装できて感動した","tags":["Xcode","iOS","AutoLayout","Swift","SwiftUI"],"date":"2019年10月16日"}}},"pageContext":{"id":"c57e83f6-2e10-5f63-abfb-b78c3814e7c3"}}}