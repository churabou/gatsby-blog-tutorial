{"componentChunkName":"component---src-templates-post-js","path":"/d18347c9-78a4-5096-8b1b-afeefdbeceba","result":{"data":{"markdownRemark":{"id":"d18347c9-78a4-5096-8b1b-afeefdbeceba","html":"<p>仕事をする上でメモを取ることはめちゃくちゃ大切だと思います。エンジニアは特にそうだと思います。\n私もよくメモを取るのですが、自分好みのメモ帳が存在しないので自作することにしました。</p>\n<p>electron + vue.js でプロトタイプを作っていたのですが、調べていたとこ、boostnoteがOSSとして公開されていることを知りました。2年ほど前使っていてかなり良かったのですが、ちょっと気に入らない点があってやめてしました。</p>\n<p>今回はOSSとして公開されているBoostnoteを引っ張ってきて、カスタマイズしていこうと思います。</p>\n<p><a href=\"https://github.com/BoostIO/Boostnote\">GitHub - BoostIO/Boostnote: A markdown editor for developers on Mac, Windows and Linux.</a></p>\n<h3>成果物</h3>\n<img width=\"1680\" alt=\"スクリーンショット 2019-07-15 19.50.07.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/166241/197668e4-b868-b645-6fe6-6c3cbbb773e1.png\">\n<p>写真だと上にタイトル入力画面追加したくらいしかわからないですね</p>\n<h3>とりあえず起動する</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git clone git@github.com:BoostIO/Boostnote.git</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd boostnote</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn \nyarn run dev</code></pre></div>\n<p><a href=\"https://github.com/BoostIO/Boostnote/blob/master/docs/build.md\">Boostnote/build.md at master · BoostIO/Boostnote · GitHub</a></p>\n<p>環境によっては最初のyarnが少し時間かかるかもしれません。\nこれだけでBoostnoteが起動します。</p>\n<img width=\"1680\" alt=\"スクリーンショット 2019-07-15 19.48.14.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/166241/caa9a346-f794-8704-45fb-7583f8952b41.png\">\n<p>個人的にはGUIの操作がないぶん普通にインストールする楽なきがします</p>\n<h3>事前準備</h3>\n<p>特にないです。適当にドキュメント眺める程度です。</p>\n<ul>\n<li><a href=\"https://electronjs.org/\">Electron | Build cross platform desktop apps with JavaScript, HTML, and CSS.</a></li>\n<li><a href=\"https://ja.reactjs.org/\">React – ユーザインターフェース構築のための JavaScript ライブラリ</a></li>\n<li><a href=\"http://stylus-lang.com\">Expressive, dynamic, robust CSS — expressive, robust, feature-rich CSS preprocessor</a></li>\n<li><a href=\"https://electronjs.org/docs/tutorial/devtools-extension\">DevTools Extension | Electron</a></li>\n</ul>\n<p>Reactのdevtoolがchromeに未インストールの場合は一応しときます。\nelectronでdev tool 使うにはなにか必要ぽっかったのですが普通に使えました。</p>\n<h3>いじってみる</h3>\n<p>以下、個人的に気に入らない部分をいじっていきます。\nなんか変更したら更新していくと思います。</p>\n<h5>新規作成時にMarkdonw Note or Snippet Noteのモーダルが出てくる</h5>\n<p>Boostnoteのsnippet機能は使わないので、新規作成ですぐにマークダウンを生成してほしいので写真のモーダルはいらない。</p>\n<img width=\"1680\" alt=\"スクリーンショット 2019-07-15 19.47.41.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/166241/e815ad6a-fd65-8c41-5376-a69575f4bfba.png\">\n<p>この程度なら設定で変えられそうと思いながらソースを追っていったら</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token function\">handleNewNoteButtonClick</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> location<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">,</span> match<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> params <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> config <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> storage<span class=\"token punctuation\">,</span> folder <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolveTargetFolder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>defaultNote <span class=\"token operator\">===</span> <span class=\"token string\">'MARKDOWN_NOTE'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">createMarkdownNote</span><span class=\"token punctuation\">(</span>storage<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">,</span> folder<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>defaultNote <span class=\"token operator\">===</span> <span class=\"token string\">'SNIPPET_NOTE'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">createSnippetNote</span><span class=\"token punctuation\">(</span>storage<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">,</span> folder<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      modal<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>NewNoteModal<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        storage<span class=\"token operator\">:</span> storage<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">,</span>\n        folder<span class=\"token operator\">:</span> folder<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">,</span>\n        dispatch<span class=\"token punctuation\">,</span>\n        location<span class=\"token punctuation\">,</span>\n        params<span class=\"token punctuation\">,</span>\n        config\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>configで条件分岐していました。設定でオフにできそうです。\nと思ったけど、100%使用しないのでごっそり削ります。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token function\">handleNewNoteButtonClick</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> location<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">,</span> match<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> params <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> config <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> storage<span class=\"token punctuation\">,</span> folder <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolveTargetFolder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">createMarkdownNote</span><span class=\"token punctuation\">(</span>storage<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">,</span> folder<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"https://github.com/BoostIO/Boostnote/blob/master/browser/main/NewNoteButton/index.js#L35#L52\">https://github.com/BoostIO/Boostnote/blob/master/browser/main/NewNoteButton/index.js#L35#L52</a></p>\n<h5>タグのスタイルが気に食わない</h5>\n<p>Before</p>\n<img width=\"236\" alt=\"スクリーンショット 2019-07-16 9.09.31.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/166241/294b0a30-57cc-c0ad-e2eb-83e9e653c892.png\">\n<p>After</p>\n<img width=\"220\" alt=\"スクリーンショット 2019-07-16 9.09.24.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/166241/cdb31721-f5e6-ef30-24b6-2bf35d326d73.png\">\n<p>個人的にはタグの頭の#が不要で、あと色も薄いので変えたい。\n頭の#に関しては表示場所で追加してるだけなので、適当に目星をつけてgrepして直ぐに発見。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">xxxx ~/w/Boostnote&gt; git grep &quot;#{tag&quot;\nbrowser/components/NoteItem.js:      #{tagName}\nbrowser/main/Detail/TagSelect.js:            &lt;span styleName=&#39;tag-label&#39; style={textStyle} onClick={(e) =&gt; this.handleTagLabelClick(tag)}&gt;#{tag}&lt;/span&gt;</code></pre></div>\n<p>出てきた箇所の#を消します。</p>\n<p>ついでに色を変更したいと思いみてみると、config.coloredTagsという部分を発見。\nどうやら設定でかえられる？と思いつつ見てみると、タグ毎に色をつけられるらしい。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">        <span class=\"token operator\">&lt;</span>TagSelect\n          ref<span class=\"token operator\">=</span><span class=\"token string\">'tags'</span>\n          value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>note<span class=\"token punctuation\">.</span>tags<span class=\"token punctuation\">}</span>\n          saveTagsAlphabetically<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>config<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>saveTagsAlphabetically<span class=\"token punctuation\">}</span>\n          showTagsAlphabetically<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>config<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span>showTagsAlphabetically<span class=\"token punctuation\">}</span>\n          data<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span>\n          onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleUpdateTag</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          coloredTags<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>config<span class=\"token punctuation\">.</span>coloredTags<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p>なるほど・・</p>\n<p>タグの生成時に自動で自分の好きな色を追加してしまおうと思ったが\nそもそもタグに色つけないので、デフォルトのテーマカラーを変えました。</p>\n<p><a href=\"https://github.com/churabou/Boostnote/commit/0d8c3529ed13db6b20b61a36d4eb81a6c2584f85\">https://github.com/churabou/Boostnote/commit/0d8c3529ed13db6b20b61a36d4eb81a6c2584f85</a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token function\">handleColorPickerConfirm</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">color</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> dispatch<span class=\"token punctuation\">,</span> config<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>coloredTags<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> colorPicker<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> tagName <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state\n    <span class=\"token keyword\">const</span> newColoredTags <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> coloredTags<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>tagName<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> color<span class=\"token punctuation\">.</span>hex<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> coloredTags<span class=\"token operator\">:</span> newColoredTags <span class=\"token punctuation\">}</span>\n    ConfigManager<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'SET_CONFIG'</span><span class=\"token punctuation\">,</span>\n      config\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">dismissColorPicker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h5>1行目がタイトルになるけど、タイトルは別に入力したい。</h5>\n<p>Qiitaとかはてブとかのの記事作成画面のように、タイトルはタイトル入力用のボックスに入力したい。</p>\n<img width=\"1680\" alt=\"スクリーンショット 2019-07-15 19.50.07.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/166241/197668e4-b868-b645-6fe6-6c3cbbb773e1.png\">\n<p><a href=\"https://github.com/churabou/Boostnote/commit/4a1b835f3cd687efd73769b3b3949ac5de9685f2\">https://github.com/churabou/Boostnote/commit/4a1b835f3cd687efd73769b3b3949ac5de9685f2</a></p>\n<h5>入力画面をスクロールするとプレビューも追随してスクロールするのがうざい。</h5>\n<p>入力画面をスクロールすると追随してPreview画面もスクロールしてくれるのですが、移動にアニメーションあってすごい鬱陶しいです。\nこれは親切な機能なのですがすごくもどかしい。アニメーションを無効にしたいと思います。その点Qiitaの記事作成画面は自然に追随してくれて良いですね！</p>\n<p><a href=\"https://github.com/BoostIO/Boostnote/blob/master/browser/components/MarkdownSplitEditor.js#L32L75\">https://github.com/BoostIO/Boostnote/blob/master/browser/components/MarkdownSplitEditor.js#L32L75</a></p>\n<p>このあたり、なんかめっちゃスクロールしてそうです。<code class=\"language-text\">this.props.config.preview.scrollSync</code>とあってこれも設定で変えられそうに思いきや、追随を無効にしてくれるだけですね。アニメーションを無効にしたいのでやっぱりソースイジる必要がありました。</p>\n<div class=\"gatsby-highlight\" data-language=\".js\"><pre class=\"language-.js\"><code class=\"language-.js\">  handleScroll (e) {\n    if (!this.props.config.preview.scrollSync) return\n    console.log(&#39;123445&#39;)\n    const previewDoc = _.get(this, &#39;refs.preview.refs.root.contentWindow.document&#39;)\n    const codeDoc = _.get(this, &#39;refs.code.editor.doc&#39;)\n    let srcTop, srcHeight, targetTop, targetHeight\n\n    if (this.userScroll) {\n      if (e.doc) {\n        srcTop = _.get(e, &#39;doc.scrollTop&#39;)\n        srcHeight = _.get(e, &#39;doc.height&#39;)\n        targetTop = _.get(previewDoc, &#39;body.scrollTop&#39;)\n        targetHeight = _.get(previewDoc, &#39;body.scrollHeight&#39;)\n      } else {\n        srcTop = _.get(previewDoc, &#39;body.scrollTop&#39;)\n        srcHeight = _.get(previewDoc, &#39;body.scrollHeight&#39;)\n        targetTop = _.get(codeDoc, &#39;scrollTop&#39;)\n        targetHeight = _.get(codeDoc, &#39;height&#39;)\n      }\n\n      const distance = (targetHeight * srcTop / srcHeight) - targetTop\n      const framerate = 1000 / 60\n      const frames = 20\n      const refractory = frames * framerate\n\n      this.userScroll = false\n\n      let frame = 0\n      let scrollPos, time\n      const timer = setInterval(() =&gt; {\n        time = frame / frames\n        scrollPos = time &lt; 0.5\n                  ? 2 * time * time // ease in\n                  : -1 + (4 - 2 * time) * time // ease out\n        if (e.doc) _.set(previewDoc, &#39;body.scrollTop&#39;, targetTop + scrollPos * distance)\n        else _.get(this, &#39;refs.code.editor&#39;).scrollTo(0, targetTop + scrollPos * distance)\n        if (frame &gt;= frames) {\n          clearInterval(timer)\n          setTimeout(() =&gt; { this.userScroll = true }, refractory)\n        }\n        frame++\n      }, framerate)\n    }\n  }</code></pre></div>\n<p>下の方を少しだけ変更してアニメーションを無効にします。</p>\n<h5>ショートカットを追加する</h5>\n<ul>\n<li>時間がある時に更新</li>\n</ul>\n<h3>Buildする (Help me)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">grunt pre-build</code></pre></div>\n<p>をすると/distにboostnoteが生成される。\nただこれを起動するとロード画面のまま起動せず、devtoolを見てみると、\n<code class=\"language-text\">Uncaught TypeError: Cannot read property &#39;apply&#39; of undefineｄ</code>と出てくる。\nこれで検索するとgrup4とかでてくるけど、つかってなさそうだし。\nそもそもローカルでもbuildできないように制限されてるのかな？そんなことはないと思うけど。</p>\n<p>どなたかわかる方、コメントよろしくおねがいします。</p>\n<h3>感想</h3>\n<ul>\n<li>git clone してすぐに起動できるが素晴らしすぎる。</li>\n<li>ソースコードの質の高さは判断できないがが、シンプルに実装されていて読みやすい</li>\n<li>今回いじった部分ではファイルの行数がそこまで多くなかった。</li>\n<li>かなり素直に実装されていて、React触ったことなくてもなんとなく処理を追うことができた。</li>\n<li>Javascriptの文法も若干見たことがなかったものがあったり、ちょっぴり楽しかった。</li>\n<li>アプリとか作るの好きな人はソース追ってて楽しいと思う。</li>\n</ul>\n<h4>React勉強したい人は絶対cloneしてソース追ってみるべき</h4>\n<p>これだけのアプリのソースが無料で公開されているのでそう思いました。</p>","frontmatter":{"title":"Boostnoteをcloneして自分好みのMarkdownメモアプリを作成する","tags":["JavaScript","Node.js","Markdown","React","Electron"],"date":"2019年07月15日"}}},"pageContext":{"id":"d18347c9-78a4-5096-8b1b-afeefdbeceba"}}}