{"componentChunkName":"component---src-templates-post-js","path":"/defafadb-9d0e-5eed-aaff-b8c93f7d2c89","result":{"data":{"markdownRemark":{"id":"defafadb-9d0e-5eed-aaff-b8c93f7d2c89","html":"<p>qiitaの記事がobjcだったのでサクッとコピペで動かしたい方に最新版のコードを共有</p>\n<h3>UILabelにUIImageを表示する方法</h3>\n<p>①NSTextAttachmentを作成する。\n②NSTextAttachmentからNSAttributedStringを作成する。\n③UILabelのattributedTextに指定する。</p>\n<p>画像のサイズや表示位置は①で調整します</p>\n<p>今回は実際に起こりそうなものとして、ラベルの末尾に画像を表示してみます</p>\n<img width=\"286\" alt=\"スクリーンショット 2019-05-10 11.59.12.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/166241/9499259e-9a49-9ead-4243-78503e762f0f.png\">\n<div class=\"gatsby-highlight\" data-language=\".swift\"><pre class=\"language-.swift\"><code class=\"language-.swift\">    override func viewDidLoad() {\n        super.viewDidLoad()\n               \n        let text = &quot;labelに犬を表示する&quot;\n        let image = UIImage(named: &quot;dog.jpg&quot;)!\n        let font: UIFont = .systemFont(ofSize: 30)\n        let size = CGSize(width: 30, height: 30)\n        \n        let attachment = NSTextAttachment()\n        attachment.image = image\n\n        let y = (font.capHeight-size.height).rounded() / 2\n        attachment.bounds.origin = CGPoint(x: 0, y: y)\n        attachment.bounds.size = size\n        \n        let imageAttribute = NSAttributedString(attachment: attachment)\n        let mutableString = NSMutableAttributedString(string: text)\n        mutableString.insert(imageAttribute, at: text.count)\n        \n        let label = UILabel()\n        view.addSubview(label)\n        label.textAlignment = .center\n        label.frame.size = .init(width: view.bounds.width-20, height: 50)\n        label.center = view.center\n        label.font = font\n        label.attributedText = mutableString\n    }  </code></pre></div>\n<p>attachmentにsizeを指定すると表示されます。ただそれだと、画像が表示される高さがずれてしまうので、\n今回は中央に揃うように高さを調整しました。</p>\n<p>当たり前ですがinsertする場所をずらせば中央に表示できます\n<img width=\"288\" alt=\"スクリーンショット 2019-05-10 12.00.20.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/166241/7db10ae9-d48d-8685-ff35-bc21c3237a9b.png\"></p>\n<p>デスクトップに犬の写真しかなかったですが、例えば仮想通貨の保有量＋💶（通過のアイコン）スコア＋👑（王冠やメダル）などが考えられると思います。</p>\n<p>結構コード量が多くてとっつきにくい気もします。</p>\n<h3>Extension</h3>\n<p>うまい感じに共通化したいですが高さを揃えるにはUILabelのfontと表示したい画像のサイズの情報が必要になってきます。\nUILabelのextensionにするのもなんか違う気がしますが一応</p>\n<div class=\"gatsby-highlight\" data-language=\".swift\"><pre class=\"language-.swift\"><code class=\"language-.swift\">    label.text = &quot;labelに犬を表示する&quot;\n    label.insertImage(UIImage(named: &quot;dog.jpg&quot;)!, at: label.text!.count, alignment: .center)</code></pre></div>\n<p>sizeはデフォルトでimage.sizeを指定します。</p>\n<div class=\"gatsby-highlight\" data-language=\".swift\"><pre class=\"language-.swift\"><code class=\"language-.swift\">    label.insertImage(UIImage(named: &quot;dog.jpg&quot;)!, at: label.text!.count, size: CGSize(width: 30, height: 30), alignment: .center) </code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\".swift\"><pre class=\"language-.swift\"><code class=\"language-.swift\">extension UILabel {\n    func insertImage(_ image: UIImage, at index: Int, size: CGSize? = nil, alignment: NSTextAttachment.VerticalAlignment = .center) {\n        let attr = attributedText as? NSMutableAttributedString ?? NSMutableAttributedString(string: text ?? &quot;&quot;)\n        let attachment = NSTextAttachment(image: image, font: font, size: size ?? image.size, alignment: alignment)\n        attr.insert(NSAttributedString(attachment: attachment), at: index)\n        attributedText = attr\n    }\n}\n\nextension NSTextAttachment {\n    convenience init(image: UIImage, font: UIFont, size: CGSize, alignment: VerticalAlignment) {\n        self.init()\n        self.image = image\n        let y: CGFloat\n        switch alignment {\n        case .top:\n            y = font.capHeight - size.height\n        case .bottom:\n            y = font.descender\n        case .center:\n            y = (font.capHeight - size.height).rounded() / 2\n        case .baseline:\n            y = 0\n        }\n        bounds.origin = CGPoint(x: 0, y: y)\n        bounds.size = size\n    }\n    \n    enum VerticalAlignment {\n        case bottom, baseline, center, top\n    }\n}</code></pre></div>\n<p>ラベルの上にsizeや表示位置の調整については<a href=\"https://stackoverflow.com/questions/26105803/center-nstextattachment-image-next-to-single-line-uilabel\">こちら</a>を参考にしました。</p>\n<img src=\"https://i.stack.imgur.com/EtmBW.png\">\n<p>引用: (<a href=\"https://stackoverflow.com/questions/26105803/center-nstextattachment-image-next-to-single-line-uilabel\">https://stackoverflow.com/questions/26105803/center-nstextattachment-image-next-to-single-line-uilabel</a>)</p>\n<p>ちなみにy座標は反転していて、UIFont.desendentは-の値を返します。</p>\n<hr>\n<h3>画像ともじのマージンを調整したい場合</h3>\n<p>テキストと画像の間にのマージンを調整したい場合は\nスペースを入れる、fontSizeを調整する、もしくは最悪の場合Paddingをつけた画像を生成する必要があるのかなと思いました。</p>\n<div class=\"gatsby-highlight\" data-language=\".swift\"><pre class=\"language-.swift\"><code class=\"language-.swift\">    func makeImageWithPadding(image: UIImage, padding: UIEdgeInsets) -&gt; UIImage {\n        UIGraphicsBeginImageContextWithOptions(image.size, false, UIScreen.main.scale)\n        UIGraphicsBeginImageContext(.init(\n                width: image.size.width + padding.left + padding.right,\n                height: image.size.height + padding.top + padding.bottom\n            )\n        )\n        image.draw(at: .init(x: padding.left, y: padding.top))\n        let image = UIGraphicsGetImageFromCurrentImageContext()!\n        UIGraphicsEndImageContext()\n        return image\n    }</code></pre></div>\n<h3>(追記) Swift5で強化された機能をつかうと</h3>\n<p><a href=\"https://qiita.com/fmtonakai/items/2e685e3c719d7fda7fc7\">https://qiita.com/fmtonakai/items/2e685e3c719d7fda7fc7</a></p>\n<div class=\"gatsby-highlight\" data-language=\".swift\"><pre class=\"language-.swift\"><code class=\"language-.swift\">let attrStr: AttributedString = &quot;今日はいい天気だ\\(image)&quot;</code></pre></div>\n<p>こうゆう実装もできるよう</p>","frontmatter":{"title":"Swift5 UILabelに画像(UIImage)を表示する NSAttributedString NSTextAttachment","tags":["Xcode","iOS","Swift"],"date":"2019年05月10日"}}},"pageContext":{"id":"defafadb-9d0e-5eed-aaff-b8c93f7d2c89"}}}