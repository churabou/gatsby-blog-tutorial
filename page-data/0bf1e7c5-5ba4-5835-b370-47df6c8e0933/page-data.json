{"componentChunkName":"component---src-templates-post-js","path":"/0bf1e7c5-5ba4-5835-b370-47df6c8e0933","result":{"data":{"markdownRemark":{"html":"<p>Gatsbyを触ってみたのですがチュートリアルだけだと??となる部分がいくつもあり結局ドキュメントをたくさん読むハメになりました。\nドキュメントのリンクを整理してたらいい感じのチュートリアルができたので投稿しました(所々中途半端ですが・・・)</p>\n<h2>Install</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g gatsby-cli</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby new [rootPath] [starter]  Create new Gatsby project.</code></pre></div>\n<p><a href=\"#starter\">starter</a>を指定する。デフォルトではdefault starterが選択されます。</p>\n<p>チュートリアルなのでhello-world一択。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby new my-blog https://github.com/gatsbyjs/gatsby-starter-hello-world</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatusby deplop </code></pre></div>\n<p>一応npm scriptにも書かれています。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm run deplop </code></pre></div>\n<div class=gatsby-remark-code-name>\n            <span>　.json</span>\n          </div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"> <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"develop\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gatsby develop\"</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">-p</code>オプションで別のポートを指定することができるので複数のプロジェクトを立ち上げたいときに。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatusby deplop -p 3000</code></pre></div>\n<p><a href=\"https://www.gatsbyjs.org/docs/gatsby-cli/\">CLI</a>のドキュメントまで丁寧にあります。</p>\n<p>デフォルトだと<a href=\"http://localhost:8000/\">http://localhost:8000/</a> でページに<a href=\"http://localhost:8000/___graphql\">http://localhost:8000/___graphql</a> でGrqphiQLにアクセスできます。</p>\n<h2>入門</h2>\n<h3>Page</h3>\n<p>ディレクトリの構成にルールがあって<code class=\"language-text\">pages/</code>が自動でページなります。\n例えば<code class=\"language-text\">pages/about.js</code>を作成すると<code class=\"language-text\">/about</code>で表示されます(ページが生成されてルートが設定される)</p>\n<div class=gatsby-remark-code-name>\n            <span>pages/index.js</span>\n          </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span> index page <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<div class=gatsby-remark-code-name>\n            <span>pages/about.js</span>\n          </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span> hello page <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<p>その他は<code class=\"language-text\">components/</code>に共通コンポネントを作成するなど普通のReactのアプリケーションのようにを開発できます。</p>\n<blockquote>\n<p>Any React component defined in src/pages/*.js will automatically become a page.</p>\n</blockquote>\n<p><a href=\"https://www.gatsbyjs.org/tutorial/part-one/#-using-page-components\">using-page-components</a></p>\n<p>またテンプレートファイルを作成して動的にページを生成することも可能です。<a href=\"https://www.gatsbyjs.org/docs/recipes/#creating-pages-automatically\">creating-pages-automatically</a></p>\n<h3>GraphQL</h3>\n<p>gatsbyの便利な点はプロジェクト内のデータをGraphqlで取得できるところです。</p>\n<p>例えばProjectの<a href=\"https://www.gatsbyjs.org/docs/gatsby-config/#configuration-options\">設定</a>情報は以下のqueryで取得できます。</p>\n<p>configファイルを以下のように変更します。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  siteMetadata<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Title from siteMetadata</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }</code></pre></div>\n<p><a href=\"http://localhost:8000/___graphql?query=%20%20query%20%7B%0A%20%20%20%20site%20%7B%0A%20%20%20%20%20%20siteMetadata%20%7B%0A%20%20%20%20%20%20%20%20title%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D\">デモ</a></p>\n<p>このようにプロジェクトの情報をqueryで取得して、それを表示するReactのコンポネントを作成し、それを元にgatsbyがページを生成するという流れになります。</p>\n<p><a href=\"https://www.gatsbyjs.org/tutorial/part-four/#use-a-page-query\">use-a-page-query</a></p>\n<p>このGraphQLですがデータを追加する作業とデータを取得する作業の二つに分けて理解するのがいいと思います。</p>\n<hr>\n<p>まずデータを追加する作業から見ていきます。\n後述するプラグインを入れる事でプロジェクト内の情報を自由に取得できるようになります。</p>\n<p><a href=\"https://www.gatsbyjs.org/docs/recipes/#adding-data-to-graphql\">adding-data-to-graphql</a></p>\n<h4>プラグインからデータを追加する</h4>\n<p>データを追加する作業はドキュメントに<code class=\"language-text\">plugin driven</code>と書かれていて、実際プラグインを入れるだけです。</p>\n<p><a href=\"https://www.gatsbyjs.org/docs/recipes/#5-sourcing-data\">sourcing-data</a></p>\n<h5>gatsby-source-filesystem</h5>\n<p>例えば<code class=\"language-text\">gatsby-source-filesystem</code>を使うことでソースからデータを取得できるようになります。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save gatsby-source-filesystem</code></pre></div>\n<div class=gatsby-remark-code-name>\n            <span>gatsby-config.js.js</span>\n          </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  siteMetadata<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Pandas Eating Lots</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-source-filesystem</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        name<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">src</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        path<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/src/</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>graphiqlを開くと<code class=\"language-text\">allFile</code>と<code class=\"language-text\">file</code>が新たに追加され、以下のqueryでファイル情報を取得できるようになります。</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\">  <span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n    allFile <span class=\"token punctuation\">{</span>\n      edges <span class=\"token punctuation\">{</span>\n        node <span class=\"token punctuation\">{</span>\n          relativePath\n          prettySize\n          extension\n          birthTime<span class=\"token punctuation\">(</span><span class=\"token attr-name\">fromNow</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"https://www.gatsbyjs.org/tutorial/part-five/\">https://www.gatsbyjs.org/tutorial/part-five/</a></p>\n<p>チュートリアルではプロジェクトのJSファイルを取得して表示しています。</p>\n<h5><a href=\"https://www.gatsbyjs.org/packages/gatsby-transformer-remark/\">gatsby-transformer-remark</a></h5>\n<p><a href=\"https://www.gatsbyjs.org/docs/adding-markdown-pages/#transform-markdown-to-html-and-frontmatter-to-data-using-gatsby-transformer-remark\">https://www.gatsbyjs.org/docs/adding-markdown-pages/#transform-markdown-to-html-and-frontmatter-to-data-using-gatsby-transformer-remark</a></p>\n<p>これはデータを追加するだけのプラグインではないので、この流れで書くのも微妙なのですが\nこのプラグインがやってくれる一番わかりやすいのはmarkdownを変換してくれるところです。mdファイルの情報をhtmlに変換して取得できたり、frontmatterなどのメタ情報を取得できます。</p>\n<p><code class=\"language-text\">allMarkdownRemark</code>というのが追加されます。</p>\n<h4>自分でデータを追加する</h4>\n<p>createNodeAPIを使って自分でデータを流すことができます。後述しますがプラグインはこのAPIを使ってデータを流しています。</p>\n<h5>手動でデータを入れてみる</h5>\n<details><summary>ポケモンのデータを入れてみる</summary><div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sourceNodes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> actions<span class=\"token punctuation\">,</span> createNodeId<span class=\"token punctuation\">,</span> createContentDigest <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> pokemons <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Pikachu\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"electric\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Squirtle\"</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"water\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n  pokemons<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pokemon</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> pokemon<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> pokemon<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">,</span>\n      id<span class=\"token operator\">:</span> <span class=\"token function\">createNodeId</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Pokemon-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>pokemon<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      internal<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">\"Pokemon\"</span><span class=\"token punctuation\">,</span>\n        contentDigest<span class=\"token operator\">:</span> <span class=\"token function\">createContentDigest</span><span class=\"token punctuation\">(</span>pokemon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n    actions<span class=\"token punctuation\">.</span><span class=\"token function\">createNode</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</div></details>\n<p>以下のqueryでポケモンを取得できるようになります。</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> MyPokemonQuery <span class=\"token punctuation\">{</span>\n  allPokemon <span class=\"token punctuation\">{</span>\n    nodes <span class=\"token punctuation\">{</span>\n      name\n      <span class=\"token keyword\">type</span>\n      <span class=\"token class-name\">id</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>外部から取得したデータを流すこともできる。</p>\n<h5>APIから取得したデータを流してみる</h5>\n<details><summary>QiitaのAPIからデータを流してみる</summary><div>\n<p>この辺のAPIは詳しく確認してないので、少し修正しただけですが、</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> fetch <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"node-fetch\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fetchItems</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://qiita.com/api/v2/items\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sourceNodes</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>\n  actions<span class=\"token punctuation\">,</span>\n  createNodeId<span class=\"token punctuation\">,</span>\n  createContentDigest<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> items <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  items<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      id<span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      title<span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n      user<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        name<span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      internal<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">\"Item\"</span><span class=\"token punctuation\">,</span>\n        contentDigest<span class=\"token operator\">:</span> <span class=\"token function\">createContentDigest</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n    actions<span class=\"token punctuation\">.</span><span class=\"token function\">createNode</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> ItemQuery <span class=\"token punctuation\">{</span>\n  allItem <span class=\"token punctuation\">{</span>\n    nodes <span class=\"token punctuation\">{</span>\n      title\n      user <span class=\"token punctuation\">{</span>\n        name\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;data&quot;: {\n    &quot;allItem&quot;: {\n      &quot;nodes&quot;: [\n        {\n          &quot;title&quot;: &quot;blob &amp; createObjectURL について &quot;,\n          &quot;user&quot;: {\n            &quot;name&quot;: &quot;Yu Watanabe&quot;\n          }\n        },\n      ]\n   }\n  }\n}</code></pre></div>\n<p>QiitaのAPIからとってきた情報を流す事で、queryで取得できるようになりました。</p>\n</div>\n</details>\n<p>先ほどの<a href=\"https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-filesystem/src/gatsby-node.js\">gatsby-source-filesystem</a>もこのcreateNodeを使ってローカルのファイル一覧を取得して流し込んでいるのがわかると思います。</p>\n<p>ファイルの情報を流すとかwordpressから記事を取得して流すといったことをやってくれるプラグインがあるので、我々は設定ファイルにパスだったりurlを入れるだけでqueryでデータを取得できるようになります。</p>\n<p><a href=\"https://www.gatsbyjs.org/docs/pixabay-source-plugin-tutorial/\">pixabay-source-plugin-tutorial</a></p>\n<p>そしてqueryで取得した結果をページに表示するだけでいいのです。</p>\n<h4>nodeを追加する</h4>\n<p>nodeにfieldを追加することができます。</p>\n<p><a href=\"https://www.gatsbyjs.org/docs/creating-slugs-for-pages/#create-slugs-in-gatsby-nodejs\">creating-slugs-for-pages</a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createFilePath <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-source-filesystem</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onCreateNode</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> node<span class=\"token punctuation\">,</span> getNode<span class=\"token punctuation\">,</span> actions <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createNodeField <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">MarkdownRemark</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> slug <span class=\"token operator\">=</span> <span class=\"token function\">createFilePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> node<span class=\"token punctuation\">,</span> getNode<span class=\"token punctuation\">,</span> basePath<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">pages</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">createNodeField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      node<span class=\"token punctuation\">,</span>\n      name<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">slug</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      value<span class=\"token operator\">:</span> slug<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>が追加されてslugが取得できるようになった。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">query  {\n  allMarkdownRemark {\n    edges {\n      node {\n        id\n        fields {\n          slug\n        }\n      }\n    }\n  }\n}</code></pre></div>\n<h4>Query</h4>\n<p>GraphQLを初めて触る人もいるかもしれませんがサイトを作るだけであれば<a href=\"https://www.gatsbyjs.org/docs/graphql-reference/\">レファレンス</a>の内容で十分だと思います。またGrqphiqlで左側をぽちぽち動かせば勝手にquery作ってくれるので特に困ることもないかと思います。</p>\n<img width=\"337\" alt=\"スクリーンショット 2019-12-07 20.36.22.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/166241/c08405e5-0c4f-c73e-cd25-76e98826ab99.png\">\n<h5>alias</h5>\n<p><code class=\"language-text\">allMarkdownRemark</code>の結果はそのままだと<code class=\"language-text\">data.allMarkdownRemark</code>ですが、先頭に任意のaliasをつけることができます。\n<code class=\"language-text\">data.latestPost</code>, <code class=\"language-text\">data.relatedPost</code>のように帰ってきます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">query {\n  latestPost: allMarkdownRemark(limit: 5) { }\n  relatedPost: allMarkdownRemark(limit: 5) { }\n}</code></pre></div>\n<h5>frontmatter</h5>\n<p>マークダウンファイルの先頭に以下のように情報を定義します。</p>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"language-md\"><code class=\"language-md\"><span class=\"token hr punctuation\">---</span>\ntitle: my first post\n<span class=\"token title important\">date: 2019-12-7\n<span class=\"token punctuation\">---</span></span></code></pre></div>\n<p>先ほどの<code class=\"language-text\">gatsby-transformer-remark</code>を使うことで以下のqueryで取得することができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">frontmatter {\n  title:\n  date:\n}</code></pre></div>\n<h5>params</h5>\n<p>どちらかというと<code class=\"language-text\">markdown-remark</code>の話ですが、</p>\n<ul>\n<li>limit</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> allMarkdownRemark(limit: 5) { }</code></pre></div>\n<ul>\n<li>format</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">date(formatString: &quot;YYYY月MM月DD日&quot;)</code></pre></div>\n<ul>\n<li>filter</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">filter: { tags: { in: [&quot;post&quot;, &quot;page&quot;] }, draft: { eq: false } }</code></pre></div>\n<h5>直近の投稿5件を取得するQuery</h5>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">query {\n  allMarkdownRemark(\n    limit: 5,\n    sort: {order: DESC, fields: frontmatter___create_at}\n  ) {\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n        }\n      }\n    }\n  }\n}</code></pre></div>\n<h3>動的にページを生成する。</h3>\n<h4>ページから必要なデータを取得する</h4>\n<p>実際にGraphQLからデータを取得してページに表示していきます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> graphql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query TitleQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>siteMetadata<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p><a href=\"https://www.gatsbyjs.org/docs/page-query/\">page-query</a></p>\n<ul>\n<li>１つのファイルにつき１つのqueryを宣言できる。この時変数は関係ない。</li>\n<li>queryの結果がpropsのdataオブジェクトに入ってくる。</li>\n</ul>\n<p>チュートリアルには書かれていないのですが、上記のルールがあります。</p>\n<p>試しに一つのファイルに二つのqueryを宣言してみたら怒られました。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">export const query1 = graphql`\n  query HomePageQuery {\n    site {\n      siteMetadata {\n        description\n      }\n    }\n  }\n`\nexport const query2 = graphql`\n  query HomePageQuery {\n    site {\n      siteMetadata {\n        description\n      }\n    }\n  }\n`</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Multiple &quot;root&quot; queries found in file</code></pre></div>\n<p>初めてこれを見たときは、どうしてpropsのdataにqueryの結果が渡ってくるんだ？いつqueryは実行されるという気持ちになったのですが、今使っているのは静的サイトジェネレーターでなので、お作法に従ってファイルにqueryを定義すればそれをもとにページ生成してくれるということを忘れていました。</p>\n<p><a href=\"https://www.gatsbyjs.org/docs/recipes/#querying-data-with-a-page-query\">https://www.gatsbyjs.org/docs/recipes/#querying-data-with-a-page-query</a>\n<a href=\"https://www.gatsbyjs.org/docs/page-query/#add-the-graphql-query\">https://www.gatsbyjs.org/docs/page-query/#add-the-graphql-query</a></p>\n<h4>動的にページを生成する</h4>\n<p><code class=\"language-text\">createPage</code> APIを使ってテンプレートから動的にPageを生成します。</p>\n<p>チュートリアルの<a href=\"https://www.gatsbyjs.org/tutorial/part-seven/\">part７</a>でこんな感じになると思います。</p>\n<div class=gatsby-remark-code-name>\n            <span>gatsby-node.js</span>\n          </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">path</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createPages</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> actions<span class=\"token punctuation\">,</span> graphql <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    {\n      allMarkdownRemark {\n        edges {\n          node {\n            frontmatter {\n              path\n            }\n          }\n        }\n      }\n    }\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n\n  result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>allMarkdownRemark<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> node <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    actions<span class=\"token punctuation\">.</span><span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span>\n      component<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">src/templates/post.js</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=gatsby-remark-code-name>\n            <span>src/templates/post-template.js</span>\n          </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> graphql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> pageQuery <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Template</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> markdownRemark <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> dat\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> frontmatter<span class=\"token punctuation\">,</span> html <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> markdownRemark\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"blog-post\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>frontmatter<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>frontmatter<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div\n        className<span class=\"token operator\">=</span><span class=\"token string\">\"blog-post-content\"</span>\n        dangerouslySetInnerHTML<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> __html<span class=\"token operator\">:</span> html <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Template<span class=\"token punctuation\">;</span></code></pre></div>\n<p>まず、テンプレートファイルを見てみます。テンプレートファイルはpathパラメータを使ったqueryの結果を埋め込むようになっています。</p>\n<p><code class=\"language-text\">gatsby-node.js</code>では全てのmdファイルのquery結果を元に<code class=\"language-text\">createPage</code>メソッドを読んでいます。\nこのメソッドが上のテンプレートファイルを指定していて、動的にページが生成されます。\n想像はつくもののチュートリアルに書かれていない大事な点は引数のcontextがtemplateのpropsとtemplateファイルのqueryの引数として渡せる点です。</p>\n<p><a href=\"https://www.gatsbyjs.org/docs/recipes/#sourcing-markdown-data-for-blog-posts-and-pages-with-graphql\">https://www.gatsbyjs.org/docs/recipes/#sourcing-markdown-data-for-blog-posts-and-pages-with-graphql</a>\n<a href=\"https://www.gatsbyjs.org/docs/using-gatsby-without-graphql/\">https://www.gatsbyjs.org/docs/using-gatsby-without-graphql/</a></p>\n<p><a href=\"https://www.gatsbyjs.org/docs/node-apis/#createPages\">onCreatePage</a></p>\n<blockquote>\n<p> All context values are made available to a template’s GraphQL queries as arguments prefaced with $</p>\n</blockquote>\n<p><a href=\"https://www.gatsbyjs.org/docs/programmatically-create-pages-from-data/#creating-pages\">https://www.gatsbyjs.org/docs/programmatically-create-pages-from-data/#creating-pages</a></p>\n<p><a href=\"https://www.gatsbyjs.org/docs/actions/#createPage\">createPage</a></p>\n<blockquote>\n<p>pased as props to the component this.props.pageContext as well as to the graphql query as graphql arguments.</p>\n</blockquote>\n<p>ソースを探すの少し時間がかかりました。</p>\n<h2>概念的な</h2>\n<h4>Starter</h4>\n<ul>\n<li>gatsby-starter-default\t</li>\n<li>gatsby-starter-blog\t</li>\n<li>gatsby-starter-hello-world\t</li>\n</ul>\n<p>公式のstarterは実は上の３つだけ。</p>\n<p><a href=\"https://www.gatsbyjs.org/docs/starters/\">https://www.gatsbyjs.org/docs/starters/</a></p>\n<p>スターター一覧\n<a href=\"https://www.gatsbyjs.org/starters/?v=2\">https://www.gatsbyjs.org/starters/?v=2</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby new gatsby-starter-hero-blog https://github.com/greglobinski/gatsby-starter-hero-blog</code></pre></div>\n<p><a href=\"https://www.gatsbyjs.org/starters/greglobinski/gatsby-starter-hero-blog/\">https://www.gatsbyjs.org/starters/greglobinski/gatsby-starter-hero-blog/</a></p>\n<p>これはちょっと重かった。</p>\n<h4>Plugin</h4>\n<p><a href=\"https://www.gatsbyjs.org/docs/plugins/\">https://www.gatsbyjs.org/docs/plugins/</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save gatsby-transformer-json</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module.exports = {\n  plugins: [`gatsby-transformer-json`],\n}</code></pre></div>\n<p>Pluginは任意のOptionを指定できる。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// Shortcut for adding plugins without options.</span>\n    <span class=\"token string\">\"gatsby-plugin-react-helmet\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Standard plugin with options example</span>\n      resolve<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-source-filesystem</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        path<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/src/data/</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        name<span class=\"token operator\">:</span> <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span></code></pre></div>\n<p><a href=\"https://www.gatsbyjs.org/docs/using-a-plugin-in-your-site/\">https://www.gatsbyjs.org/docs/using-a-plugin-in-your-site/</a></p>\n<p>StyledComponentsやaxiosなどのnpx packageを使うには</p>\n<p><a href=\"https://www.gatsbyjs.org/docs/what-you-dont-need-plugins-for/\">https://www.gatsbyjs.org/docs/what-you-dont-need-plugins-for/</a></p>\n<p>ローカルのパスを指定してプラグインを入れることもできる。</p>\n<p><a href=\"https://www.gatsbyjs.org/docs/loading-plugins-from-your-local-plugins-folder/\">https://www.gatsbyjs.org/docs/loading-plugins-from-your-local-plugins-folder/</a></p>\n<h4>Config</h4>\n<p><a href=\"https://www.gatsbyjs.org/docs/api-files-gatsby-node/\">https://www.gatsbyjs.org/docs/api-files-gatsby-node/</a></p>\n<h5>gatsby-config.js</h5>\n<h5>gatsyby-node.js</h5>\n<p>build時に一度だけ呼ばれ、動的にページを生成したり、GraphQLのnodeを追加したりする。</p>\n<p><a href=\"https://www.gatsbyjs.org/docs/api-files-gatsby-node/\">https://www.gatsbyjs.org/docs/api-files-gatsby-node/</a></p>\n<h2>実践編</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby new blog https://github.com/gatsbyjs/gatsby-starter-hello-world</code></pre></div>\n<h4>styled-componentsを使う</h4>\n<p><a href=\"https://www.gatsbyjs.org/docs/styled-components/\">https://www.gatsbyjs.org/docs/styled-components/</a></p>\n<p>モジュールとプラグインを入れます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save gatsby-plugin-styled-components styled-components babel-plugin-styled-components</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-plugin-styled-components</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>typescriptを使う</h4>\n<p>あまり参考になるかはわかりませんが、Pluginを入れる必要があります。</p>\n<p><a href=\"https://github.com/gatsbyjs/gatsby/tree/master/examples/using-typescript\">https://github.com/gatsbyjs/gatsby/tree/master/examples/using-typescript</a></p>\n<p><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-typescript/?=type\">https://www.gatsbyjs.org/packages/gatsby-plugin-typescript/?=type</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install gatsby-plugin-typescript</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./src/**/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"esnext\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"commonjs\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"dom\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"es2017\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"jsx\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"experimentalDecorators\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"emitDecoratorMetadata\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"noEmit\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"skipLibCheck\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Typescriptを使うメリットがどれくらいあるかだが、公式がPropsTypesで頑張ってるのをみると入れてもいいと思う。</p>\n<h4>Syntax Hilight</h4>\n<p>GatsbyのPluginにのっかって楽をするだけであればプラグイン入れるだけです。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i -S gatsby-remark-prismjs</code></pre></div>\n<p><code class=\"language-text\">gatsby-transformer-remark</code>のpluginに追加してあげます。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    resolve<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-transformer-remark</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-remark-prismjs</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>先ほどのqueryがclassつきのhtmlを取得できます。\nあとは自分でstyleを指定してもいいですが、標準で用意されているテーマを読み込んであげるだけです。</p>\n<p><code class=\"language-text\">gatsby-browser.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prismjs/themes/prism-solarizedlight.css\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-prismjs/\">https://www.gatsbyjs.org/packages/gatsby-remark-prismjs/</a></p>\n<h4>Tag振り分け</h4>\n<p><a href=\"https://www.gatsbyjs.org/docs/adding-tags-and-categories-to-blog-posts/\">https://www.gatsbyjs.org/docs/adding-tags-and-categories-to-blog-posts/</a></p>\n<h4>SEO</h4>\n<p>SEOコンポネントがドキュメントに掲載されています。</p>\n<p><a href=\"https://www.gatsbyjs.org/docs/add-seo-component/\">https://www.gatsbyjs.org/docs/add-seo-component/</a></p>\n<h4>Deploy(GitHub-Pages)</h4>\n<p>プラグイン入れてpushするだけです。</p>\n<p><a href=\"https://www.gatsbyjs.org/docs/how-gatsby-works-with-github-pages/\">https://www.gatsbyjs.org/docs/how-gatsby-works-with-github-pages/</a></p>\n<h4>Plugin</h4>\n<p>エディターのpluginを使えばgraphqlの入力に補間が効くかも・・</p>\n<h2>感想</h2>\n<p>簡単簡単と言われているのでQiitaのチュートリアル見ながら３０分くらいでいけるのかと思ったのですが、結局ドキュメントをたくさん読むハメになり結構時間がかかってしまいました。\nチュートリアルだけではなんで？っていいうお気持ちになるので、余力があれば<a href=\"https://www.gatsbyjs.org/docs/recipes/\">recipes</a>と<a href=\"https://www.gatsbyjs.org/docs/content-and-data/\">content-and-data</a>をみると理解が早まるのでお勧めです。お作法に従って書くのが苦手でなければかなり簡単だと思います。\nというか長々とかきましたがお気に入りのstarterから初めて少し変更するぐらいが一番コスパが良いと思います。</p>","frontmatter":{"title":"Gatsbyを最速で理解するためのチュートリアル","tags":["JavaScript","静的サイトジェネレーター","React","gatsby"],"date":"2019年12月14日"}},"sameTagPosts":{"edges":[{"node":{"id":"34226e4f-0a84-533b-b543-be011c238051","frontmatter":{"title":"RxJSのswitchMap mergeMap concatMap","tags":["JavaScript","RxJS","Rx"],"date":"2020年04月12日"}}},{"node":{"id":"01361ba1-5b01-5e53-b04b-9bc1fdb2805f","frontmatter":{"title":"JavaScriptのthisは難しくない","tags":["JavaScript","TypeScript","Vue.js","React"],"date":"2020年04月12日"}}},{"node":{"id":"5fa0c2c8-65d8-51a2-a79c-447589ed9dba","frontmatter":{"title":"JavaScriptでカジュアルに日付操作する","tags":["JavaScript","TypeScript"],"date":"2020年03月21日"}}},{"node":{"id":"fa032aee-2b4e-50bf-ad2b-200d44d39000","frontmatter":{"title":"create-react-appを使わずにReactの環境構築をして周辺ツールとかを理解する","tags":["JavaScript","TypeScript","Vue.js","React"],"date":"2019年12月09日"}}},{"node":{"id":"1920cdb0-deb2-5551-a7c5-a2db43291e10","frontmatter":{"title":"Web Animations API を使ってJavaScriptでAnimationを実装する","tags":["JavaScript","CSS3","TypeScript","Vue.js","React"],"date":"2019年09月11日"}}}]}},"pageContext":{"id":"0bf1e7c5-5ba4-5835-b370-47df6c8e0933","tags":["JavaScript","静的サイトジェネレーター","React","gatsby"]}}}