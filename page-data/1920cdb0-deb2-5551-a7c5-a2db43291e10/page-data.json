{"componentChunkName":"component---src-templates-post-js","path":"/1920cdb0-deb2-5551-a7c5-a2db43291e10","result":{"data":{"markdownRemark":{"html":"<p>JavaScriptでアニメーションを実装しようと調べたところ、Web Animation API というものがあるようです。\nMDNを見る限りこのAPIはまだまだ新しいようで、Qiitaにも記事が少なかったのでチートシート的にまとめてみます。</p>\n<h2>Web Animation API とは</h2>\n<p>choromeやsafariなどの一部プラウザで対応してたり対応してなかったりするようです。</p>\n<p>polyfillのスクリプトを読み込むと問題なく使えるようです。どうやらWeb Animation自体は数年前から存在しているようです。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"https://cdn.jsdelivr.net/web-animations/latest/web-animations.min.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install web-animations-js</code></pre></div>\n<h2>基本のアニメーション</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> backgroundColor<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Element.animate</h3>\n<p><a href=\"https://developer.mozilla.org/ja/docs/Web/API/Element/animate\">https://developer.mozilla.org/ja/docs/Web/API/Element/animate</a></p>\n<p>animationを実行しanimation object を返します。</p>\n<p><code class=\"language-text\">element.animate(keyframes, option)</code>となっており</p>\n<p>第一引数のkeyframesはいくつかフォーマットが用意されています。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> keyframes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token comment\">// from</span>\n    opacity<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    color<span class=\"token operator\">:</span> <span class=\"token string\">\"#fff\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> \n  <span class=\"token punctuation\">{</span> <span class=\"token comment\">// to</span>\n    opacity<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n ​   color<span class=\"token operator\">:</span> <span class=\"token string\">\"#000\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> keyframes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  opacity<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>          <span class=\"token comment\">// [ from, to ]</span>\n  color<span class=\"token operator\">:</span>   <span class=\"token punctuation\">[</span> <span class=\"token string\">\"#fff\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#000\"</span> <span class=\"token punctuation\">]</span> <span class=\"token comment\">// [ from, to ]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API/Keyframe_Formats\">フォーマットについて</a></p>\n<p>第二引数のoptionにはmsの数値かoptionオブジェクトを渡します。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">element<span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>keyframes<span class=\"token punctuation\">,</span> option<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>アニメーションのOption</h2>\n<p>第二引数に渡すOptionについてです。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  duration<span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n  easing<span class=\"token operator\">:</span> <span class=\"token string\">'ease-in'</span><span class=\"token punctuation\">,</span>\n  iterations<span class=\"token operator\">:</span> <span class=\"token string\">'Infinity'</span><span class=\"token punctuation\">,</span>\n  fill<span class=\"token operator\">:</span> <span class=\"token string\">'backwards'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>easing</h3>\n<p>アニメーションカーブを指定できます。デフォルトでは<code class=\"language-text\">liner</code>になります。\n<code class=\"language-text\">Ease-in</code> <code class=\"language-text\">ease-in-out</code>などの他にも<code class=\"language-text\">steps(1, end)</code> <code class=\"language-text\">cubic-bezier(0, 0, 0.58, 1)</code>なども指定できます。</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming/easing\">https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming/easing</a></li>\n</ul>\n<h3>Iterations</h3>\n<p>アニメーションの回数を指定できます。デフォルトは<code class=\"language-text\">1</code>です。\n無限に繰り返すには<code class=\"language-text\">Infinity</code>を指定します。</p>\n<h3>delay</h3>\n<p>名前の通り指定秒アニメーションを遅らせることができます。</p>\n<h3>fill</h3>\n<p>アニメーション終了後にアニメーション終了時の状態を維持するには<code class=\"language-text\">forwards</code>を、\nアニメーション開始前の状態に戻る場合は<code class=\"language-text\">backwords</code>を指定します。</p>\n<hr>\n<p>大抵の場合は上記を指定できれば十分だと思いますが、その他にもいくつかオプションがあるようです。</p>\n<p><a href=\"https://drafts.csswg.org/web-animations/#updating-animationeffect-timing\">https://drafts.csswg.org/web-animations/#updating-animationeffect-timing</a></p>\n<h2>Animation Object</h2>\n<p><code class=\"language-text\">Animation</code> コンストラクタを使ってAnimationオブジェクトを生成します。\n<code class=\"language-text\">element.animate</code>メソッドではanimationが即座に実行されてしまいますが、Animationインターフェースを使う場合は明示的に<code class=\"language-text\">play()</code>メソッドを呼ぶ必要があります。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> effect <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">KeyframeEffect</span><span class=\"token punctuation\">(</span>\n    element<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> backgroundColor<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">1000</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n <span class=\"token keyword\">const</span> animation <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animation</span><span class=\"token punctuation\">(</span>effect<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span>timeline<span class=\"token punctuation\">)</span>\n\n animation<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><a href=\"https://developer.mozilla.org/ja/docs/Web/API/Animation/Animation\">Animation</a></p>\n<p>第二引数はデフォルトでdocument.timelineのようです。</p>\n<p><a href=\"https://developer.mozilla.org/ja/docs/Web/API/KeyframeEffecthttps://developer.mozilla.org/ja/docs/Web/API/KeyframeEffect\">KeyframeEffect</a></p>\n<h3>メソッド</h3>\n<p>Animationオブジェクトは以下の制御メソッドが使えます。</p>\n<ul>\n<li><code class=\"language-text\">play()</code> 再生・再開する</li>\n<li><code class=\"language-text\">pause()</code> 一時停止する</li>\n<li><code class=\"language-text\">reverse()</code> 逆再生する</li>\n<li><code class=\"language-text\">cancel()</code> 中断する</li>\n<li><code class=\"language-text\">finish()</code> </li>\n</ul>\n<p><a href=\"https://developer.mozilla.org/ja/docs/Web/API/Animation#%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89\">https://developer.mozilla.org/ja/docs/Web/API/Animation#%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89</a></p>\n<h3>アニメーションの状態</h3>\n<p>Animation.playStateプロパティーを参照するとアニメーションの状態が分かります。</p>\n<table>\n<thead>\n<tr>\n<th>value</th>\n<th>説明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>idle</td>\n<td>アニメーション前</td>\n</tr>\n<tr>\n<td>running</td>\n<td>アニメーション中</td>\n</tr>\n<tr>\n<td>paused</td>\n<td>中断</td>\n</tr>\n<tr>\n<td>finished</td>\n<td>アニメーション完了</td>\n</tr>\n</tbody>\n</table>\n<h3>イベントハンドラ</h3>\n<p>アニメーション終了時のコールバックを指定できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">animation<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onfinish</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'finished'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>キャンセル時のイベントも指定できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">animation<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">oncancel</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canceled'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>参考</h2>\n<ul>\n<li><a href=\"https://developers.google.com/web/updates/2015/10/web-animations-resources\">https://developers.google.com/web/updates/2015/10/web-animations-resources</a></li>\n<li><a href=\"https://danielcwilson.com/blog/2015/07/animations-part-1/\">https://danielcwilson.com/blog/2015/07/animations-part-1/</a></li>\n<li><a href=\"https://drafts.csswg.org/web-animations/#the-animation-interface\">https://drafts.csswg.org/web-animations/#the-animation-interface</a></li>\n</ul>\n<hr>\n<p>簡単なAnimationはCSSの方が簡単で良さそうですが、プログラムから制御したい場面ってやっぱりありますよね。ルーレットアプリを作るときとか。今後も色々変更がありそうです。</p>","frontmatter":{"title":"Web Animations API を使ってJavaScriptでAnimationを実装する","tags":["JavaScript","CSS3","TypeScript","Vue.js","React"],"date":"2019年09月11日"}},"sameTagPosts":{"edges":[{"node":{"id":"34226e4f-0a84-533b-b543-be011c238051","frontmatter":{"title":"RxJSのswitchMap mergeMap concatMap","tags":["JavaScript","RxJS","Rx"],"date":"2020年04月12日"}}},{"node":{"id":"01361ba1-5b01-5e53-b04b-9bc1fdb2805f","frontmatter":{"title":"JavaScriptのthisは難しくない","tags":["JavaScript","TypeScript","Vue.js","React"],"date":"2020年04月12日"}}},{"node":{"id":"5fa0c2c8-65d8-51a2-a79c-447589ed9dba","frontmatter":{"title":"JavaScriptでカジュアルに日付操作する","tags":["JavaScript","TypeScript"],"date":"2020年03月21日"}}},{"node":{"id":"0bf1e7c5-5ba4-5835-b370-47df6c8e0933","frontmatter":{"title":"Gatsbyを最速で理解するためのチュートリアル","tags":["JavaScript","静的サイトジェネレーター","React","gatsby"],"date":"2019年12月14日"}}},{"node":{"id":"fa032aee-2b4e-50bf-ad2b-200d44d39000","frontmatter":{"title":"create-react-appを使わずにReactの環境構築をして周辺ツールとかを理解する","tags":["JavaScript","TypeScript","Vue.js","React"],"date":"2019年12月09日"}}}]}},"pageContext":{"id":"1920cdb0-deb2-5551-a7c5-a2db43291e10","tags":["JavaScript","CSS3","TypeScript","Vue.js","React"]}}}