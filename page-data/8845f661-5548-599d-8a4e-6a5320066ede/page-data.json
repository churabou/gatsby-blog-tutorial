{"componentChunkName":"component---src-templates-post-js","path":"/8845f661-5548-599d-8a4e-6a5320066ede","result":{"data":{"markdownRemark":{"id":"8845f661-5548-599d-8a4e-6a5320066ede","html":"<p>SwiftUIではUIKitのUITextViewに対応する物がありません。\nTextFieldには<a href=\"https://developer.apple.com/documentation/swiftui/textfield/3277098-linelimit\">LineLimit</a>なるプロパティーも存在して複数業の入力ができそうですが、\n2019年10月現在では、SwiftUIでT複数行入力できるViewを使うにはUITextViewをラップするしかなさそうです。</p>\n<p>ここら辺も普通のUIViewRepresentableのお作法ですが、</p>\n<div class=\"gatsby-highlight\" data-language=\".swift\"><pre class=\"language-.swift\"><code class=\"language-.swift\">struct TextView: UIViewRepresentable {\n    @Binding var text: String\n\n    func makeCoordinator() -&gt; Coordinator {\n        Coordinator(self)\n    }\n\n    func makeUIView(context: Context) -&gt; UITextView {\n        let textView = UITextView()\n        textView.delegate = context.coordinator\n        textView.isScrollEnabled = true\n        textView.isEditable = true\n        textView.isUserInteractionEnabled = true\n        textView.backgroundColor = .green\n        return textView\n    }\n\n    func updateUIView(_ textView: UITextView, context: Context) {\n        textView.text = text\n    }\n}\n\nextension TextView {\n    final class Coordinator: NSObject, UITextViewDelegate {\n        private var textView: TextView\n        \n        init(_ textView: TextView) {\n            self.textView = textView\n        }\n        \n        func textView(_ textView: UITextView, shouldChangeTextIn range: NSRange, replacementText text: String) -&gt; Bool {\n            return true\n        }\n        \n        func textViewDidChange(_ textView: UITextView) {\n            self.textView.text = textView.text\n        }\n    }\n}</code></pre></div>\n<p><a href=\"https://stackoverflow.com/questions/56471973/how-do-i-create-a-multiline-textfield-in-swiftui\">stack overflow</a></p>\n<hr>\n<p>余談: UITextViewの初期化部分をクロージャーで使う側で設定して見るのはどうなのか・・</p>\n<div class=\"gatsby-highlight\" data-language=\".swift\"><pre class=\"language-.swift\"><code class=\"language-.swift\">struct TextView {\n    @Binding var text: String\n    let configure: (UITextView) -&gt; ()\n    \n    func makeUIView(context: Context) -&gt; UITextView {\n        let textView = UITextView()\n        configure(textView)\n        return textView\n    }\n}\n\n\nTextView(&quot;text&quot;) { textView in \n    textView.isScrollEnabled = true\n    textView.isEditable = true\n    textView.isUserInteractionEnabled = true\n}</code></pre></div>","frontmatter":{"title":"SwiftUIでTextViewを使う","tags":["iOS","Swift","SwiftUI"],"date":"2019年10月27日"}}},"pageContext":{"id":"8845f661-5548-599d-8a4e-6a5320066ede"}}}