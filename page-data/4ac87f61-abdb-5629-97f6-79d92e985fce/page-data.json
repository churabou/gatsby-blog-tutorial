{"componentChunkName":"component---src-templates-post-js","path":"/4ac87f61-abdb-5629-97f6-79d92e985fce","result":{"data":{"markdownRemark":{"html":"<h3>本題</h3>\n<p>UIKitでGridレイアウトを実装しようとするとUICollectionViewクラスを利用するのが一般的だと思います。\nただご存知の通りUICollectionViewを使う場合、UICollectionViewLayout, UICollectionViewDelegate, UICollectionViewDataSource、などのUICollectionViewのメソッドをいちいち呼ばなきゃいけないので結構面倒くさいです。\n実際、昨年ぐらい（もっと前から？）宣言的に書くというのが、じわじわと広がってきて、今年になってSwiftUIもでてきてだいぶ宣言的にかけるようになりました。</p>\n<p>CollectionViewはセルを再利用してくれるので、たくさんのデータを表示する際には使うのですが、場合によってはセルを再利用しなくてもいい場合があります。</p>\n<p>そんなときにCollectionViewを使わずsubViewを並べてくれるレイアウトクラスをちょこっと作ってやるといいと思います。</p>\n<h3>再利用しないGridViewの例</h3>\n<p>たとえば、パスコードロックなどの数字入力画面、カレンダー、カラーパレットなどですね。</p>\n<p>使用例１</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">        gridView<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span>white\n        gridView<span class=\"token punctuation\">.</span>insets <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span>zero\n        gridView<span class=\"token punctuation\">.</span>borderWidth <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n        gridView<span class=\"token punctuation\">.</span>gridSize <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n        \n        <span class=\"token keyword\">let</span> size <span class=\"token operator\">=</span> gridView<span class=\"token punctuation\">.</span>gridSize <span class=\"token operator\">*</span> gridView<span class=\"token punctuation\">.</span>gridSize\n        <span class=\"token keyword\">let</span> colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">UIColor</span><span class=\"token punctuation\">(</span>hue<span class=\"token punctuation\">:</span> <span class=\"token function\">CGFloat</span><span class=\"token punctuation\">(</span>$<span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">CGFloat</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> saturation<span class=\"token punctuation\">:</span> <span class=\"token number\">0.85</span><span class=\"token punctuation\">,</span> brightness<span class=\"token punctuation\">:</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span> alpha<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n        colors<span class=\"token punctuation\">.</span>forEach <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> view <span class=\"token operator\">=</span> <span class=\"token function\">UIView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            view<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> $<span class=\"token number\">0</span>\n            gridView<span class=\"token punctuation\">.</span><span class=\"token function\">addSubview</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        gridView<span class=\"token punctuation\">.</span>layout<span class=\"token punctuation\">.</span><span class=\"token function\">center</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// オートレイアウトのExtension</span></code></pre></div>\n<p>カラーパレットとか</p>\n<img src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/166241/7a88e60d-af13-2a21-b83c-f3d4171a8905.png\" width=217 height=448>\n<img src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/166241/dcff7cf2-80ec-34c7-8119-74491f255408.png\" width=217 height=448>\n<p>カレンダーとか</p>\n<img src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/166241/436be5eb-90a3-e5f1-ee0a-ffc2269555d9.gif\" width=217 height=448>\n<p>パスコードの数字入力画面とか</p>\n<img src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/166241/8fa64c7e-fdda-c4ca-d184-200ec535a1c5.png\" width=217 height=448>\n<h3>実装</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GridLayoutView</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">UIView</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> gridSize<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n    <span class=\"token keyword\">var</span> borderWidth<span class=\"token punctuation\">:</span> <span class=\"token builtin\">CGFloat</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    <span class=\"token keyword\">var</span> insets<span class=\"token punctuation\">:</span> <span class=\"token builtin\">UIEdgeInsets</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span>zero\n    \n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">layoutSubviews</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">layoutSubviews</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">let</span> margin <span class=\"token operator\">=</span> borderWidth\n\n        <span class=\"token keyword\">let</span> width <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>bounds<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> <span class=\"token function\">CGFloat</span><span class=\"token punctuation\">(</span>gridSize <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> margin <span class=\"token operator\">-</span> insets<span class=\"token punctuation\">.</span><span class=\"token keyword\">left</span> <span class=\"token operator\">-</span> insets<span class=\"token punctuation\">.</span><span class=\"token keyword\">right</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">CGFloat</span><span class=\"token punctuation\">(</span>gridSize<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">let</span> height <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>bounds<span class=\"token punctuation\">.</span>height <span class=\"token operator\">-</span> <span class=\"token function\">CGFloat</span><span class=\"token punctuation\">(</span>gridSize <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> margin <span class=\"token operator\">-</span> insets<span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span> insets<span class=\"token punctuation\">.</span>bottom<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">CGFloat</span><span class=\"token punctuation\">(</span>gridSize<span class=\"token punctuation\">)</span>\n        \n        <span class=\"token keyword\">let</span> startX<span class=\"token punctuation\">:</span> <span class=\"token builtin\">CGFloat</span> <span class=\"token operator\">=</span> insets<span class=\"token punctuation\">.</span><span class=\"token keyword\">left</span>\n        <span class=\"token keyword\">let</span> startY<span class=\"token punctuation\">:</span> <span class=\"token builtin\">CGFloat</span> <span class=\"token operator\">=</span> insets<span class=\"token punctuation\">.</span>top\n\n        <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> startX\n        <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> startY\n        \n        subviews<span class=\"token punctuation\">.</span><span class=\"token function\">enumerated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>forEach <span class=\"token punctuation\">{</span> index<span class=\"token punctuation\">,</span> view <span class=\"token keyword\">in</span>\n            view<span class=\"token punctuation\">.</span>frame<span class=\"token punctuation\">.</span>origin <span class=\"token operator\">=</span> <span class=\"token function\">CGPoint</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> y<span class=\"token punctuation\">)</span>\n            view<span class=\"token punctuation\">.</span>frame<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> <span class=\"token function\">CGSize</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">:</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> height<span class=\"token punctuation\">)</span>\n            \n            x <span class=\"token operator\">+</span><span class=\"token operator\">=</span> width <span class=\"token operator\">+</span> margin\n            <span class=\"token keyword\">if</span> index <span class=\"token operator\">%</span> gridSize <span class=\"token operator\">==</span> gridSize <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">{</span>\n                x <span class=\"token operator\">=</span> startX\n                y <span class=\"token operator\">+</span><span class=\"token operator\">=</span> height <span class=\"token operator\">+</span> margin\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Tips</h3>\n<ul>\n<li>中央のマージンはborderWidthで指定します。</li>\n<li>外側のマージンはinsetsで指定します。</li>\n<li>ボーダーカラーはbackgroundColorを指定すればかわります。</li>\n<li>subViewを自動で並べてくれるのでaddSubviewするだけです。</li>\n</ul>\n<h3>補足</h3>\n<p>等間隔にViewを配置するにはUIStackViewをよく使いますが、今回は使っていません。\n内部でAutoLayoutを使用しているのと、純粋に座標計算したほうがコード量が少ないからです。</p>\n<p>Storyboard派の皆さんはUIStackViewを使えば簡単にできるじゃないかと思うかもしれませんが\n個人開発する上では圧倒的に時短かつ再利用可能です(コンポネントとして)</p>\n<h3>まとめ</h3>\n<p>ちょっとしたGridLayoutを実現するためのレイアウトクラスを作って使ってるよというはなし。\ninsert, delete, drag, reuseなどUICollectionViewのほうが優れている点が多い。</p>","frontmatter":{"title":"Swiftで簡単なGrid Layoutを実装するためのレイアウトクラス （UIKit）","tags":["iOS","Swift"],"date":"2019年07月06日"}},"sameTagPosts":{"edges":[{"node":{"id":"8845f661-5548-599d-8a4e-6a5320066ede","frontmatter":{"title":"SwiftUIでTextViewを使う","tags":["iOS","Swift","SwiftUI"],"date":"2019年10月27日"}}},{"node":{"id":"c57e83f6-2e10-5f63-abfb-b78c3814e7c3","frontmatter":{"title":"SwiftUIとXcodeのPreviewでオートレイアウトをリアルタイムで確認しながら実装できて感動した","tags":["Xcode","iOS","AutoLayout","Swift","SwiftUI"],"date":"2019年10月16日"}}},{"node":{"id":"36c8d4f0-7394-5bff-b6b5-bae80a8113aa","frontmatter":{"title":"Swift5.1 dynamicMemberLookup^KeyPathを使ってSwiftにKotolinのapplyを実装する","tags":["Xcode","iOS","Kotlin","Swift"],"date":"2019年10月04日"}}},{"node":{"id":"6aa8f8fc-5836-52a8-bd46-ae56d1d4f4de","frontmatter":{"title":"SwiftでTooltipを描画する","tags":["iOS","UIKit","Swift"],"date":"2019年08月31日"}}},{"node":{"id":"fa82a31d-4690-5cb8-a507-42237d6afec2","frontmatter":{"title":"実機１台で別端末のレイアウトを確認する方法","tags":["Xcode","iOS","Swift"],"date":"2019年08月15日"}}}]}},"pageContext":{"id":"4ac87f61-abdb-5629-97f6-79d92e985fce","tags":["iOS","Swift"]}}}