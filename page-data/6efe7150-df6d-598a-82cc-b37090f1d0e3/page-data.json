{"componentChunkName":"component---src-templates-post-js","path":"/6efe7150-df6d-598a-82cc-b37090f1d0e3","result":{"data":{"markdownRemark":{"id":"6efe7150-df6d-598a-82cc-b37090f1d0e3","html":"<p>Flutterに入門したのですが、まだまだ日本語の記事が少ない印象です。\nとりあえず個人的チュートリアルであるQiitaのAPIの叩いて表示する奴をやってみたいと思います。</p>\n<p>ちなみに私は<a href=\"https://flutter.dev/docs/get-started/codelab\">Write your first Flutter app</a>を程度です。\nDartの文法からわかりません。</p>\n<img src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/166241/54fa0dcb-4557-583b-bb94-86caaf21248a.png\" width=\"330\"/>\n<h3>API</h3>\n<h4>Entity</h4>\n<div class=\"gatsby-highlight\" data-language=\".dart\"><pre class=\"language-.dart\"><code class=\"language-.dart\">class User {\n  final String id;\n  final String iconUrl;\n\n  User({this.id, this.iconUrl});\n\n  factory User.fromJson(Map&lt;String, dynamic&gt; json) {\n    return User(\n      id: json[&#39;id&#39;],\n      iconUrl: json[&#39;profile_image_url&#39;],\n    );\n  }\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\".dart\"><pre class=\"language-.dart\"><code class=\"language-.dart\">class Article {\n  final String title;\n  final String url;\n  final User user;\n\n  Article({this.title, this.url, this.user});\n\n  factory Article.fromJson(Map&lt;String, dynamic&gt; json) {\n    return Article(\n      title: json[&#39;title&#39;],\n      url: json[&#39;url&#39;],\n      user: User.fromJson(json[&#39;user&#39;]),\n    );\n  }\n}</code></pre></div>\n<ul>\n<li>DartのClass\n　<a href=\"https://dart.dev/guides/language/language-tour#classes\">https://dart.dev/guides/language/language-tour#classes</a> </li>\n<li>Factoryコンストラクタ</li>\n<li>ネストしたJSONのパース\n<a href=\"https://medium.com/flutter-community/parsing-complex-json-in-flutter-747c46655f51\">https://medium.com/flutter-community/parsing-complex-json-in-flutter-747c46655f51</a></li>\n</ul>\n<h3>Request</h3>\n<div class=\"gatsby-highlight\" data-language=\".dart\"><pre class=\"language-.dart\"><code class=\"language-.dart\">class QiitaClient {\n  static Future&lt;List&lt;Article&gt;&gt; fetchArticle() async {\n    final url = &#39;https://qiita.com/api/v2/items&#39;;\n    final response = await http.get(url);\n    if (response.statusCode == 200) {\n      final List&lt;dynamic&gt; jsonArray = json.decode(response.body);\n      return jsonArray.map((json) =&gt; Article.fromJson(json)).toList();\n    } else {\n      throw Exception(&#39;Failed to load article&#39;);\n    }\n  }\n}</code></pre></div>\n<p><a href=\"https://flutter.dev/docs/cookbook/networking/fetch-data\">https://flutter.dev/docs/cookbook/networking/fetch-data</a></p>\n<p>ドキュメントのExampleとほぼ同じ感じです。\nただAPIがJSONの配列を返してくるので、その辺がまだ自信ない。\nとりあえず動いたレベル。</p>\n<p>main関数に適当に書いてリクエストしてみます。</p>\n<div class=\"gatsby-highlight\" data-language=\".dart\"><pre class=\"language-.dart\"><code class=\"language-.dart\">void main() {\n    QiitaClient.fetchArticle().then((articles) =&gt; {\n        articles.forEach((article) =&gt; {\n            print(article.title)\n        })\n    })\n}</code></pre></div>\n<p>VSCodeのDEBUG CONSOLEを貼っておく。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">flutter: JP1を使うにあたっての基礎知識\nflutter: 知っておく価値のある珍しいHTMLタグ\nflutter: 「純粋関数型JavaScriptのつくりかた」に触発されて\nflutter: 自宅状況の見える化（M5Stack版）\nflutter: 機械学習初心者のためのおすすめ教材について（動画編）\nflutter: プログラミング歴2ヶ月の俺が超絶怒涛のアウトプットをした\nflutter: GIMPでグラデーション付きの着色をする．\nflutter: プログラミング学習記録91〜復活〜\nflutter: Live/Tv..!...djokovic vs struff EN Vivo!streaM\nflutter: 錦織圭 vs ブノワ・ペール 生放送 全仏オープン テニス\nflutter: CoreTweetを使ってTweetアプリを作ろうとしたときの備忘録</code></pre></div>\n<p>ここら辺はほぼJSのPromiseと同じなのでスラスラ書けた。</p>\n<h3>UI</h3>\n<h4>ListView</h4>\n<p><a href=\"https://api.flutter.dev/flutter/widgets/ListView-class.html\">https://api.flutter.dev/flutter/widgets/ListView-class.html</a></p>\n<p>4種類の生成方法があるけど、UITableViewやLicyclaViewのように再利用してくれるやつは2のItemBuilderを使うやつっぽい。</p>\n<p>cookbookにexampleがある。</p>\n<p>&#x3C;img src=\"<a href=\"https://flutter.dev/images/cookbook/long-lists.gif%22\">https://flutter.dev/images/cookbook/long-lists.gif\"</a>, width=230,></p>\n<p><a href=\"https://flutter.dev/docs/cookbook/lists/long-lists\">https://flutter.dev/docs/cookbook/lists/long-lists</a></p>\n<p>Flutterが用意する<a href=\"https://api.flutter.dev/flutter/material/ListTile-class.html\">ListTile</a>を使って\nシンプルに実装しました。</p>\n<div class=\"gatsby-highlight\" data-language=\".dart\"><pre class=\"language-.dart\"><code class=\"language-.dart\">class ArticleListView extends StatelessWidget {\n  final List&lt;Article&gt; articles;\n  ArticleListView({Key key, this.articles}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return ListView.builder(\n      itemCount: articles.length,\n      itemBuilder: (BuildContext context, int index) {\n        final article = articles[index];\n        return ListTile(\n          leading: CircleAvatar(\n            backgroundImage: NetworkImage(article.user.iconUrl),\n          ),\n          title: Text(article.title),\n        );\n      },\n    );\n  }\n}</code></pre></div>\n<p>セルのタップイベントはListTileにonTapがあるのでそこで取得できます。</p>\n<div class=\"gatsby-highlight\" data-language=\".dart\"><pre class=\"language-.dart\"><code class=\"language-.dart\">    ListTile(\n        ... \n        onTap: () { \n          // 画面遷移\n        }\n    )</code></pre></div>\n<h4>WebView</h4>\n<p><a href=\"https://github.com/flutter/plugins/tree/master/packages/webview_flutter\">https://github.com/flutter/plugins/tree/master/packages/webview_flutter</a></p>\n<p><code class=\"language-text\">pubspec.yaml</code>に追記します。</p>\n<div class=\"gatsby-highlight\" data-language=\".yml\"><pre class=\"language-.yml\"><code class=\"language-.yml\">dependencies:\n  flutter:\n    sdk: flutter\n  # 中略\n  webview_flutter: ^0.1.0+1</code></pre></div>\n<p>iOSの場合はInfo.plistに以下を追加する必要がある。</p>\n<div class=\"gatsby-highlight\" data-language=\".xml\"><pre class=\"language-.xml\"><code class=\"language-.xml\">    &lt;key&gt;io.flutter.embedded_views_preview&lt;/key&gt;\n    &lt;string&gt;YES&lt;/string&gt;</code></pre></div>\n<p>Usage</p>\n<div class=\"gatsby-highlight\" data-language=\".dart\"><pre class=\"language-.dart\"><code class=\"language-.dart\">   WebView(initialUrl: &quot;url&quot;)</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\".dart\"><pre class=\"language-.dart\"><code class=\"language-.dart\">class ArticleDetailPage extends StatelessWidget {\n  final Article article;\n\n  ArticleDetailPage({Key key, this.article}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        body: Center(\n          child: WebView(\n            initialUrl: article.url,\n          ),\n        ),\n      ),\n    );\n  }\n}</code></pre></div>\n<h4>画面遷移</h4>\n<div class=\"gatsby-highlight\" data-language=\".dart\"><pre class=\"language-.dart\"><code class=\"language-.dart\">    ListTile(\n        ... \n        onTap: () { \n            Navigator.push(\n                context, \n                MaterialPageRoute(builder: (context) =&gt; ArticleDetailPage(article: article)),\n            );\n        }\n    )</code></pre></div>\n<p><a href=\"https://flutter.dev/docs/cookbook/navigation/navigation-basics\">Navigation</a></p>\n<img src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/166241/cd9a6112-9259-a364-8467-802bd70f36e0.png\" width=\"280\"/>\n<p>ソースコード　<a href=\"https://gist.github.com/churabou/6a34a0236bcf1ca69006b832cfbea789\">https://gist.github.com/churabou/6a34a0236bcf1ca69006b832cfbea789</a></p>\n<h3>感想</h3>\n<p>ドキュメントがしっかりしててよかった。特につまずくこともなくスラスラと書けたと思う。\nUITableView(delegate, dataSource)やListView(adapter)、GUIでのUI開発のやり方を覚える必要がないので、\nQiitaのAPIを表示するということに限れば、ネイティブ開発より何倍も早く実装できると思う。\nurlの画像も標準で表示してくれるので凄い楽。簡単なモバイル開発には向いていると思いました。\n２日前くらいにFlutter触り始めたのに、SwiftUIの発表で一旦Flutterの学習をやめようかと思いました。\n今後Android開発をすることになったら間違いなくFlutterを使いますね。</p>\n<h3>Next</h3>\n<ul>\n<li>UIをもっと作り込みたい。iOSはListTileだと物足りない。</li>\n<li>Pull to Refresh, 無限スクロース</li>\n<li>リファクタ</li>\n</ul>","frontmatter":{"title":"Flutter入門 QiitaのAPIを叩いて記事一覧を表示してみる","tags":["Android","iOS","Dart","Flutter"],"date":"2019年06月04日"}}},"pageContext":{"id":"6efe7150-df6d-598a-82cc-b37090f1d0e3"}}}